{
  "info": {
    "_postman_id": "f104a1be-cdc5-46c3-83c9-92ce51837e89",
    "name": "udacity-fsnd-udaspicelatte",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "23072687"
  },
  "item": [
    {
      "name": "public",
      "item": [
        {
          "name": "/drinks",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"value contains drinks array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.drinks).to.be.an('array')",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks",
              "host": ["{{host}}"],
              "path": ["drinks"]
            }
          },
          "response": []
        },
        {
          "name": "/drinks-detail",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401 since no credentials are present\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks-detail",
              "host": ["{{host}}"],
              "path": ["drinks-detail"]
            }
          },
          "response": []
        },
        {
          "name": "/drinks",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401 since no credentials are present\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\":\"anikulapo\",\n    \"recipe\":\"[{'name': 'water', 'color': 'blue', 'parts': 1}]\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/drinks",
              "host": ["{{host}}"],
              "path": ["drinks"]
            }
          },
          "response": []
        },
        {
          "name": "/drinks/1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401 since no credentials are present\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks/1",
              "host": ["{{host}}"],
              "path": ["drinks", "1"]
            }
          },
          "response": []
        },
        {
          "name": "/drinks/1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401 since no credentials are present\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks/1",
              "host": ["{{host}}"],
              "path": ["drinks", "1"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "barista",
      "item": [
        {
          "name": "/drinks",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"value contains drinks array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.drinks).to.be.an('array')",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks",
              "host": ["{{host}}"],
              "path": ["drinks"]
            }
          },
          "response": []
        },
        {
          "name": "/drinks-detail",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks-detail",
              "host": ["{{host}}"],
              "path": ["drinks-detail"]
            }
          },
          "response": []
        },
        {
          "name": "/drinks",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\":\"soda\",\n    \"recipe\":[{\"name\": \"water\", \"color\": \"blue\", \"parts\": 1}]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{host}}/drinks",
              "host": ["{{host}}"],
              "path": ["drinks"]
            }
          },
          "response": []
        },
        {
          "name": "/drinks/1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks/1",
              "host": ["{{host}}"],
              "path": ["drinks", "1"]
            }
          },
          "response": []
        },
        {
          "name": "/drinks/1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks/1",
              "host": ["{{host}}"],
              "path": ["drinks", "1"]
            }
          },
          "response": []
        }
      ],
      "auth": {
        "type": "bearer",
        "bearer": [
          {
            "key": "token",
            "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImNhQ3JhX3RBRXMyMGV2STRIRFlibSJ9.eyJpc3MiOiJodHRwczovL2NvcmZmZWUtc2hvcC51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjM0MDdiN2RkOGJkYWE2MDM0ZmE1ZDFjIiwiYXVkIjoiY29mZmVlLXNob3AtYXBpLWVuZHBvaW50IiwiaWF0IjoxNjY1MjY4MzA5LCJleHAiOjE2NjUyNzU1MDksImF6cCI6Ik1ldVVzMGw2NVBrUWNVTWpHRU9ERE4wY1hvZWFOdDhrIiwic2NvcGUiOiIiLCJwZXJtaXNzaW9ucyI6WyJnZXQ6ZHJpbmtzIiwiZ2V0OmRyaW5rcy1kZXRhaWwiXX0.y8i4TBTBjnD0Y90eDruuhfePZJ9lZAEDJENrgkheK0gjV6D7lk6EGPtNgnede3N8xmc54w6DVpcGLJRthpPvr3cxqVnR-i_-RLw67b-2_uTC4XDZaTODvpEV3tphiU0iK9ktgMx8sumlaDh6l6yY2-pW9EGcfbW3wNUdcN488K-hez5criXXWb-Vj2V-TpvwmDt-gUyKsH6uLKRyxgRwtM7X9wEVh1sgX10nBx-y7FHNakTi-0oY15KCpsO5___b83lSr3FCStRk1p2cHnnQkHZzN1VkulTvyk31Ej093hmtElH3zAUogVQWi3FocYCQ3Myh0R14id_8nUvurwWEeQ",
            "type": "string"
          }
        ]
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        }
      ]
    },
    {
      "name": "manager",
      "item": [
        {
          "name": "/drinks",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"value contains drinks array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.drinks).to.be.an('array')",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks",
              "host": ["{{host}}"],
              "path": ["drinks"]
            }
          },
          "response": []
        },
        {
          "name": "/drinks-detail",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"value contains drinks array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.drinks).to.be.an('array')",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks-detail",
              "host": ["{{host}}"],
              "path": ["drinks-detail"]
            }
          },
          "response": []
        },
        {
          "name": "/drinks",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Water4\",\n    \"recipe\": [{\n        \"name\": \"Water\",\n        \"color\": \"blue\",\n        \"parts\": 1\n    }]\n}"
            },
            "url": {
              "raw": "{{host}}/drinks",
              "host": ["{{host}}"],
              "path": ["drinks"]
            }
          },
          "response": []
        },
        {
          "name": "/drinks/1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"value contains drinks array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.drinks).to.be.an('array')",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Water5\"\n}"
            },
            "url": {
              "raw": "{{host}}/drinks/1",
              "host": ["{{host}}"],
              "path": ["drinks", "1"]
            }
          },
          "response": []
        },
        {
          "name": "/drinks/1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{host}}/drinks/1",
              "host": ["{{host}}"],
              "path": ["drinks", "1"]
            }
          },
          "response": []
        }
      ],
      "auth": {
        "type": "bearer",
        "bearer": [
          {
            "key": "token",
            "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImNhQ3JhX3RBRXMyMGV2STRIRFlibSJ9.eyJpc3MiOiJodHRwczovL2NvcmZmZWUtc2hvcC51cy5hdXRoMC5jb20vIiwic3ViIjoiZ29vZ2xlLW9hdXRoMnwxMDM1Njk1NDEwNTg1OTA2MDY3NDkiLCJhdWQiOiJjb2ZmZWUtc2hvcC1hcGktZW5kcG9pbnQiLCJpYXQiOjE2NjUyNjc4MjEsImV4cCI6MTY2NTI3NTAyMSwiYXpwIjoiTWV1VXMwbDY1UGtRY1VNakdFT0RETjBjWG9lYU50OGsiLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImRlbGV0ZTpkcmlua3MiLCJnZXQ6ZHJpbmtzIiwiZ2V0OmRyaW5rcy1kZXRhaWwiLCJwYXRjaDpkcmlua3MiLCJwb3N0OmRyaW5rcyJdfQ.uK2k_dCaKjqh5gSBD8bzhALh6i3OZv_WpgKo6VGZ3H8x3kHCa4xqI7yL7oFcTh-Uca9P7ICPR57I3Xy5Wm0f-CTedbjIRgjMKDdGAUHG_giKcsycuP_homEcGUnDHVbXqqBAGHICBtV3gEkzYiQ5R0sw97jIk4pp1UhZeoS-2C7mWaQRl-Zxh5XMnV8uVisH3H1e31gUAedeFzEUACvfISQMYupCFYOIYaC49V6SB_fUhQmEP7oWfvBjL5uy7ObmrLv4BLisat8hcpmZCQOqPoNprMHbaJ2Uc5unk0m2CCN6GpBkzT1e3XaX2gw26Xm5iCsFpoXkuxyWSJFqRd_4cQ",
            "type": "string"
          }
        ]
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "host",
      "value": "localhost:5000",
      "type": "string"
    }
  ]
}
